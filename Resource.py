# Resource.py
LOGO_BASE64 = """

"""  # This is a placeholder for the actual base64 encoded logo data.

import base64
def get_logo_base64():
    """Returns the base64 encoded logo."""
    return LOGO_BASE64

def convert_logo_to_base64():
    """Converts a logo image to base64 encoded string."""
    with open('src\logo1.png', 'rb') as f:
        data = base64.b64encode(f.read()).decode('utf-8')
    print("Logo converted to base64:")
    print(data)

if __name__ == "__main__":
    convert_logo_to_base64()
    print("Logo base64 string has been printed.")
    # You can also call get_logo_base64() to retrieve the logo base64 string.
    logo_base64 = get_logo_base64()
    print("Logo Base64:", logo_base64)